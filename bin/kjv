#!/usr/bin/perl -w

# KJV shell for sword by twitham@sbcglobal.net

# to get a copy for emacs kjv-mode say: kjv gen 1-2000 > kjv.txt

use Text::Wrap;

%name = ();
if (open FILE, "/usr/share/sword/locales.d/abbr.conf") {
    while (<FILE>) {
	$name{$2} = $1 if /^(.+)=(\S+)/;
    }
    close FILE;
}

$debug = 1, shift @ARGV if @ARGV and $ARGV[0] =~ /^-d/;
if (@ARGV) {			# one lookup and exit
    &lookup(@ARGV);
} else {			# interactive KJV shell!
    print "KJV> ";
    while (<>) {
	chomp;
	last if /quit/i;
	next unless $_;
	&lookup(split);
    } continue {
	print "KJV> ";
    }
}

sub clean { # strip markup but keep paragraphs, italics, quotes for plain text
    my $l = shift;
    $l =~ s!<html>.*<body>!!;
    $l =~ s!</body>.*</html>!!;
    $l =~ s!</?w.*?>!!g;
    $l =~ s!</?q.*?>!"!g;	  # quote - words of Christ
    $l =~ s!<transChange.*?>![!g; # italics - words added for english
    $l =~ s!</transChange>!]!g;
    $l =~ s!<divineName>(\S+)</divineName>!\U$1!g; # uppercase: LORD
    $l =~ s!<chapter.*?>!!g;
    $l =~ s!</?foreign.*?>!!g;
    $l =~ s!</?inscription>!!g;
    $l =~ s!<div .*"book"/>!!;
    $l =~ s!(.+?:) +!$1 . (length($1) < 8 ? "\t\t" : "\t")!e; # chapter/verse
    $l =~ s!\s+$!!;
    $l = "\n$l" if $l =~ s!<milestone.*?"x-p"/>!!g; # paragraph
    return $l;
}

BEGIN {
    sub lookup {
	my($type, @query) = @_;
#open PIPE, "diatheke -l abbr -f CGI -b Scofield -k @ARGV |"
	my $search = '';
	if ('phrase' =~ /^$type/) {
	    $search = ' -s phrase';
	} elsif ('multiword' =~ /^$type/) {
	    $search = ' -s multiword';
	} elsif ('regex' =~ /^$type/) {
	    $search = ' -s regex';
	} else {
	    unshift @query, $type;
	}
	print "-*- mode: kjv -*-\n";
	my $cmd = "diatheke -l abbr -f internal -b KJV$search -k '@query'";
	warn "$cmd\n";
	open PIPE, "$cmd |" or die "can't pipe from diatheke: $!\n";

	# In sword 1.8, Psalm subtitles wrongly appear below the first
	# verse.  So we have to "look ahead" to strip them from next
	# verse and move them before this verse.  -twitham
	
	my $title = '';
	while (<PIPE>) {
	    $title = 0;
	    $title = $1 if s!\s*<title.*?>(.+)</title>\s*!!;
	    print wrap("\t\t", "\t\t", clean("{ $title }")), "\n"
		if $title;
	    print $line
		if $line;
	    
	    print if $debug;
	    chomp;

	    $_ = clean $_;

	    if (/^\s*(.+) 1:1:/) { # book header
		my $name = $name{$1} || $1;
		print "\n*\t{ The Book of $name }\n";
	    }
	    if (/^\s*(.+) (\d+):1:/) { # chapter header
		my $name = $name{$1} || $1;
		print "\n**\t\t{ $name Chapter $2 }\n\n";
	    }
	    my $p = s/^\n// ? 1 : 0; # paragraph?
	    $line = wrap("", "\t\t", $_) . "\n";
	    $line = "\n$line" if $p;
	}
	print $line;
	close PIPE;
    }
}
